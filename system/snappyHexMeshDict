/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  12                                    |
|   \\  /    A nd           | Website:  www.openfoam.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       true;

geometry
{
    ballast
    {
        type searchableBox;
        min (5  0  -0.0087);
        max (15 0.5 0.0087);
    }
    
    sleepers
    {
        type searchableBoxes;
        boxes
        (
            (6.5 0.5 -0.0087) (7.5 0.65 0.0087)
            (9.0 0.5 -0.0087) (10.0 0.65 0.0087)
            (11.5 0.5 -0.0087) (12.5 0.65 0.0087)
            (14.0 0.5 -0.0087) (15.0 0.65 0.0087)
        );
    }
    
    rail
    {
        type searchableBox;
        min (5  0.65  -0.0087);
        max (15 0.75 0.0087);
    }
};

castellatedMeshControls
{
    maxLocalCells 1000000;
    maxGlobalCells 2000000;
    minRefinementCells 10;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 3;
    
    features
    (
    );
    
    refinementSurfaces
    {
        ballast
        {
            level (2 2);
            patchInfo { type wall; }
        }
        
        sleepers
        {
            level (2 2);
            patchInfo { type wall; }
        }
        
        rail
        {
            level (2 2);
            patchInfo { type wall; }
        }
    }
    
    resolveFeatureAngle 30;
    
    refinementRegions
    {
        ballast
        {
            mode inside;
            levels ((1.0 2));
        }
    }
    
    locationInMesh (10 1.5 0.0);
    allowFreeStandingZoneFaces true;
}

snapControls
{
    nSmoothPatch 3;
    tolerance 2.0;
    nSolveIter 30;
    nRelaxIter 5;
    nFeatureSnapIter 10;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap false;
}

addLayersControls
{
    relativeSizes true;
    
    layers
    {
        "(ballast|sleepers|rail)"
        {
            nSurfaceLayers 3;
        }
    }
    
    expansionRatio 1.2;
    finalLayerThickness 0.3;
    minThickness 0.1;
    nGrow 0;
    featureAngle 30;
    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedialAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
    nRelaxedIter 20;
}

meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minFlatness 0.5;
    minVol 1e-13;
    minTetQuality -1;
    minArea -1;
    minTwist 0.02;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;
    
    relaxed
    {
        maxNonOrtho 75;
    }
}

writeFlags
(
    scalarLevels
    layerSets
    layerFields
);

mergeTolerance 1e-6;

// ************************************************************************* //
